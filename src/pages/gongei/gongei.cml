<template>
  <view class="box">
    <view class="banner">
      <image src="{{ bannerSrc }}"></image>
    </view>

    <view class="container">
      <view class="title" style="border-radius: 12cpx 12cpx 0 0;">
        <text>产品信息</text>
      </view>
        
     <m-form>
          <view class="main">
              <view class="row">
                  <text>工业分类</text>
                  <view class="iselect">
                      <m-picker
                              list="{{ industrial }}"
                              name="industrialId"
                              index="{{ formData.industrialId }}"
                              c-bind:selectevent="onPickerSelectChange"
                      >
                      </m-picker>
                      <image class="sjx" src="{{ back2Src }}"></image>
                  </view>
              </view>
              <view class="row">
                  <text>产品名称</text>
                  <input cstyle="border:0;text-align: right;margin-right: -20cpx;" type="text" data-name="productName" value="{{ formData.productName }}" c-bind:input="onInputChange" placeholder="请输入产品名称"/>
              </view>
              <view class="column">
                  <text>产品介绍</text>
                  <textarea cstyle="border:0;padding-left: 0;padding-right: 0;padding-top: 20cpx;font-size: 32cpx;" 
                  placeholder="请输入产品介绍" data-name="productIntroduce" value="{{ formData.productIntroduce }}" c-bind:input="onInputChange"></textarea>
              </view>
              <view class="column">
                  <text>照片</text>
                  <view style="padding-top: 20cpx;">
                      <m-upload-image
                              name="photoUrl"
                              imgSrc="{{ formData.photoUrl }}"
                              c-bind:uploadimgevent="onUploadChange"
                              c-bind:uploadremevent="onUploadRemoveImageChange"
                      >
                      </m-upload-image>
                  </view>
              </view>
              <view class="row">
                  <text>信息有效期</text>
                  <view class="iselect">
                      <input cstyle="border:0px;text-align: right;margin-right: -20cpx;" type="number" data-name="period" value="{{ formData.period }}" c-bind:input="onInputChange" placeholder=""/>
                      <view>天</view>
                  </view>
              </view>
              <view class="row">
                  <text>附件</text>
                  <m-upload-file c-bind:uploadfilevent="onUploadChange"  c-bind:uploadremevent="onUploadChange" name="annexUrl" fileUrl="{{ formData.annexUrl }}"></m-upload-file>
              </view>
          </view>

          <view class="title">
            <text>单位信息</text>
          </view>

          <view class="main">
              <view class="row">
                  <text>城市</text>
                  <view class="iselect">
                      <m-picker
                              disabled
                              list="{{ cities }}"
                              name="provinceId"
                              z-index="{{ 2 }}"
                              index="{{ formData.provinceId }}"
                              c-bind:selectevent="onPickerSelectChange"
                      >
                      </m-picker>
                      <image class="sjx" src="{{ back2Src }}"></image>
                  </view>
              </view>
              <view class="row">
                  <text>区县/开发区</text>
                  <view class="iselect">
                      <m-picker
                              disabled
                              list="{{ counties }}"
                              name="countyId"
                              index="{{ formData.countyId }}"
                              c-bind:selectevent="onPickerSelectChange"
                      >
                      </m-picker>
                      <image class="sjx" src="{{ back2Src }}"></image>
                  </view>
              </view>
              <view class="row">
                  <text>镇街/园区</text>
                  <input disabled cstyle="border:0px;text-align: right;margin-right: -20cpx;" type="text" data-name="street" value="{{ formData.street }}" c-bind:input="onInputChange" placeholder="请输入镇街/园区"/>
              </view>
              <view class="row">
                  <text>联系单位</text>
                  <input disabled cstyle="border:0px;text-align: right;margin-right: -20cpx;" type="text" data-name="companyName" value="{{ formData.companyName }}" c-bind:input="onInputChange" placeholder="请输入联系单位"/>
              </view>
              <view class="row">
                  <text>单位地址</text>
                  <input cstyle="border:0px;text-align: right;margin-right: -20cpx;" type="text" data-name="companyAddress" value="{{ formData.companyAddress }}" c-bind:input="onInputChange" placeholder="请输入单位地址"/>
              </view>
          </view>

         <view class="title">
             <text>联系方式</text>
         </view>
         <view class="main">
              <view class="row">
                  <text>联系人</text>
                  <input disabled cstyle="border:0px;text-align: right;margin-right: -20cpx;" type="text" data-name="companyPrincipal" value="{{ formData.companyPrincipal }}" c-bind:input="onInputChange" placeholder="请输入联系人"/>
              </view>
              <view class="row">
                  <text>联系电话</text>
                 <input disabled cstyle="border:0px;text-align: right;margin-right: -20cpx;" type="number" data-name="companyTel" value="{{ formData.companyTel }}" c-bind:input="onInputChange" placeholder="请输入联系电话"/>
              </view>
         </view>

         <button btn-style="background-image: linear-gradient(90deg,#00b6fd,#05a0fd);border-radius: 40cpx;margin:30cpx" c-bind:onclick="handleSubmit">
             发布
         </button>
     </m-form>
        <c-dialog show="{{ show }}"
                  type= "confirm"
                  mask
                  showIcon="{{ false }}"
                  title="供应信息发布"
                  content="确定发布吗?"
                  c-bind:show="showHandle"
                  c-bind:confirm="confirmHandle"
                  c-bind:cancel="cancelHandle"
        ></c-dialog>
    </view>
  </view>
</template>

<script>
import cml from 'chameleon-api'
import store from '../../store'; // 在单独构建的版本中辅助函数为 CML 内置的store.mapState
import gongeiData from '../../assets/json/gongei.json';
import request from "../../utils/request";
import {duc2W} from "../../utils/utils";


class Gongei {

  data = {
    bannerSrc: "https://wm.source.wiimedia.cn/banner/banner2.jpg",
    bannerSrc1:"https://wm.source.wiimedia.cn/icon/upload.png",
    back2Src: "https://wm.source.wiimedia.cn/images/back2.png",

    cities: gongeiData.data.citiesList,
    counties: gongeiData.data.countiesList,
    industrial: gongeiData.data.industrialList,

    show:false,

    count: '',
    isUpdate:false, // 保存是否是更新的标识

    // 表单的数据模型
    formData:{
      industrialId:'',
      productName:'', // 产品名称
      productIntroduce :'', // 产品介绍
      photoUrl :'', // 照片
      period:'', // 信息有效期
      annexUrl:'', // 附件

      provinceId:'',
      countyId:'',
      street:'',//'镇街/园区',
      companyName:'',//'联系单位',
      companyAddress:'',//'单位地址',

      companyPrincipal :'',//'联系人',
      companyTel:'',//'联系电话',

    },

  }

  computed = {

  }

  watch  = {

  }

  methods = {
    showHandle() {
      this.show = true;
    },

    cancelHandle(){
      this.show = false;
    },

    onPickerSelectChange({detail}){
      const { name, value } = detail
      this.formData[`${name}`] = value// 当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新
    },

    onInputChange(e){
      const name = e.target.dataset.name
      const value = e.detail.value
      this.formData[`${name}`] = value // this.data.formData 是 obj 对象, 指向这个元素的引用地址
    },

    onUploadChange({detail}){
      const { name, value } = detail
      this.formData[`${name}`] = value
    },

    onUploadRemoveImageChange({detail}){
      const { name, value } = detail
      this.formData[`${name}`] = value
    },

    async confirmHandle(e){ // 收集数据, 提交弹框
      this.cancelHandle()

      const industrialId = this.data.formData.industrialId // 当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新
      if(industrialId.length==0){
        cml.showToast({
          message: '请选择工业分类',
          duration: 1000,
        });
        return false;
      }

      const productName = this.data.formData.productName // 当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新
      if(productName.length==0){
        cml.showToast({
          message: '请输入产品名称',
          duration: 1000,
        });
        return false;
      }

      const productIntroduce = this.data.formData.productIntroduce // 当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新
      if(productIntroduce.length==0){
        cml.showToast({
          message: '请输入产品介绍',
          duration: 1000,
        });
        return false;
      }


      const photoUrl = this.data.formData.photoUrl // 当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新
      if(photoUrl.length==0){
        cml.showToast({
          message: '请上传照片',
          duration: 1000,
        });
        return false;
      }
      const period = this.data.formData.period // 当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新
      if(period.length==0){
        cml.showToast({
          message: '请输入信息有效期',
          duration: 1000,
        });
        return false;
      }

      const res = await request((this.isUpdate?'/supply/update' :'/supply/add'), {issuePerson: store.getters.getGlobalUserId.userId, ...this.data.formData}, 'POST')

      const code = res.code
      const message = res.message

      let str = code !== 200 ? message : '提交成功'
      cml.showToast({
        message: str,
        duration: 3000,
      });


      code == 200 && cml.navigateBack(this.isUpdate?-1:-2)

    },

    handleSubmit() {
      this.showHandle()
    }
  }

  beforeCreate(query) {
    this.isUpdate = !!query.supplyId
    if (this.isUpdate){
      this.formData.productName=duc2W(query.productName)
      this.formData.productIntroduce =duc2W(query.productIntroduce)
      this.formData.photoUrl =duc2W(query.photoUrl)
      this.formData.period=duc2W(query.period)
      this.formData.annexUrl=duc2W(query.annexUrl)
      this.formData.supplyId = query.supplyId
    }
    const gi= store.getters.getGlobalItem

    this.formData.industrialId = parseInt(gi.industrialid)||''

    this.formData.provinceId = parseInt(gi.city)||''
    this.formData.countyId = parseInt(gi.district)||''
    this.formData.street = gi.areaname||''
    this.formData.companyName = gi.companyname||''
    this.formData.companyPrincipal = gi.fzr||''
    this.formData.companyTel = gi.tel||''
  }

  created(query) {
  }

  beforeMount(query) {
  }

  onShow() {
  }

  mounted() {
  }

  onHide() {
  }

  beforeDestroy() {
  }


  destroyed() {
  }
}

export default new Gongei();
</script>

<style scoped>
  .hidden{
    display: none;
  }

  .box{
    width: 100%;
    height: 100%;
  }

  .box .banner{
    height: 300cpx;
  }

  .box .banner image{
    width: 100%;
  }

  .box .container{
    border-radius: 12cpx 12cpx 0 0;
    margin-top: -20cpx;
    background-color: #ffffff;
  }

  .container .title{
    background-color: #f6f8f9;
    padding: 40cpx 30cpx 20cpx 30cpx;
    color: #a4a4a4;
  }
  .container .title>text{
    font-size: 24cpx;
  }

  .container .main{
    background-color: #fff;
  }
  .row{
    flex-direction: row;
    padding: 0 30cpx;
    border-bottom: 1px solid #f1f1f1;
    align-items: center;
    height: 88cpx;
    justify-content: space-between;
  }
  .iselect{
    justify-content: flex-start;
    align-items: center;
    flex-direction: row;
    height: 88cpx;
  }
  .iselect .sjx{ width:22cpx; height:22cpx;margin-left: 8cpx;margin-top:2cpx;}
  .column{
    flex-direction:column;
    padding:30cpx;
    border-bottom: 1px solid #f1f1f1;
  }
  .column .shangchuan{margin-top:30cpx;}
</style>

<script cml-type="json">
{
  "base": {
    "usingComponents": {
        "m-form":"../../components/m-form/m-form",
        "m-form-item":"../../components/m-form-item/m-form-item",
        "m-picker": "../../components/m-picker/m-picker",
        "m-upload-image": "../../components/m-upload-image/m-upload-image",
        "m-upload-file": "../../components/m-upload-file/m-upload-file",
        "c-dialog": "cml-ui/components/c-dialog/c-dialog"
    }
  },
  "wx": {
    "navigationBarTitleText": "供给填报",
    "backgroundTextStyle": "dark",
    "backgroundColor": "#E2E2E2"
  }
}
</script>
